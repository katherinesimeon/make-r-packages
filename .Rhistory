hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
# Plot both curves
ggplot(all_curve) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="A") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
# Make labels for each curve before combining
curve1$curve <- "Rhyme/Control"
curve2$curve <- "Initial Phoneme"
# Combine into a single tibble
all_curve <- bind_rows(curve1,curve2)
# Plot both curves
ggplot(all_curve) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="A") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
# Generate first curve
curve3 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve3$curve <- "Rhyme/Control"
curve4$curve <- "Initial Phoneme"
# Generate first curve
curve3 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Generate second curve
curve4 <- generate_curve(
time = 0:100,
mid = 40, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve3$curve <- "Rhyme/Control"
curve4$curve <- "Initial Phoneme"
B_curves <- bind_rows(curve3,curve4)
# Plot both curves
ggplot(B_curves) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="A") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
# Plot both curves
ggplot(B_curves) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="B") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
##### IN NOISE HYPOTHESIS B
# Generate first curve
curve3 <- generate_curve(
time = 0:100,
mid = 80, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Generate second curve
curve4 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve3$curve <- "Rhyme/Control"
curve4$curve <- "Initial Phoneme"
B_curves <- bind_rows(curve3,curve4)
# Plot both curves
ggplot(B_curves) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="B") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
##### IN NOISE HYPOTHESIS C
# Generate first curve
curve5 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Generate second curve
curve6 <- generate_curve(
time = 0:100,
mid = 80, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve5$curve <- "Rhyme/Control"
curve6$curve <- "Initial Phoneme"
c_curves <- bind_rows(curve5,curve6)
# Plot both curves
ggplot(c_curves) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="C") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
# Plot both curves
ggplot(all_curve) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="A") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
library(patchwork)
##### IN QUIET HYPOTHESIS A ----------
# Generate first curve
curve1 <- generate_curve(
time = 0:100,
mid = 40, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Generate second curve
curve2 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve1$curve <- "Rhyme/Control"
curve2$curve <- "Initial Phoneme"
# Combine into a single tibble
a_curves <- bind_rows(curve1,curve2)
# Plot both curves
a <- ggplot(all_curve) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="A") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
a
##### IN NOISE HYPOTHESIS B ---------
# Generate first curve
curve3 <- generate_curve(
time = 0:100,
mid = 80, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Generate second curve
curve4 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve3$curve <- "Rhyme/Control"
curve4$curve <- "Initial Phoneme"
B_curves <- bind_rows(curve3,curve4)
# Plot both curves
b <- ggplot(B_curves) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="B") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
b
##### IN NOISE HYPOTHESIS C -------
# Generate first curve
curve5 <- generate_curve(
time = 0:100,
mid = 60, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Generate second curve
curve6 <- generate_curve(
time = 0:100,
mid = 80, # Where the midpoint of the slope will be. Modify to change the position of the curve
scale = .2,
asymptote = .9)
# Make labels for each curve before combining
curve5$curve <- "Rhyme/Control"
curve6$curve <- "Initial Phoneme"
c_curves <- bind_rows(curve5,curve6)
# Plot both curves
c <- ggplot(c_curves) +
aes(x = time, y = proportion, group=curve, colour=curve) +
geom_line(aes(linetype=curve,colour=curve),size=1.8) +
ylim(0,1.0) +
ylab("Proportion of Looks") +
xlab("Time (ms)") +
geom_vline(xintercept=22,linetype="dashed",colour="#404040", size=0.8) +
labs(title="C") +
theme_classic(base_size=15) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_linetype_manual(values=c("dashed","solid"),guide=FALSE) +
scale_colour_manual(values=c("#104E8B","#0F0F0F"),name='Competitor\nCondition') +
annotate(
"text",
label = "Find the",
size=8,
y = .95,
x = -0.1,
hjust = 0,
vjust = 0,
color = "#1A1A1A") +
annotate(
"text",
label = "candle",
size=8,
y = .95,
x = 24,
hjust = 0,
vjust = 0,
color = "#1A1A1A",
fontface="italic")
c
a + b + c + plot_layout(n col=1)
library(patchwork)
a + b + c + plot_layout(ncol=1)
a + b + c + plot_layout(ncol=1)
add_ten <- function(number) {
number+10
}
y <- c(1,2,3)
add_ten(y)
y <- c(6:10)
y
minus_ten <- function(number) {
number-10
}
minus_ten(y)
setwd()
getwd()
setwd("/Users/katherinesimeon/Documents/R_Programming/Northwestern_RUG/make-r-packages/")
usethis::create_package("mathFun")
typeof(y)
class(y)
add_ten(1:3)
minus_ten(22:25)
sample(10
)
x<- sample(10)
type(x)
class(x)
?sample
